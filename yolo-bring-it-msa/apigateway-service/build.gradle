plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.yolo.bringit'
version = '1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.3.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-server-webflux'

	// Json
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'io.jsonwebtoken:jjwt:0.12.3'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// config-service
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.0'

	// amqp
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0' // gateway는 webflux기반이라 해당 ui 사용해야함. Swaggger 의존성

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
